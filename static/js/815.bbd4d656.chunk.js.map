{"version":3,"file":"static/js/815.bbd4d656.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nexport const RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post(\n        'https://connections-api.herokuapp.com/register',\n        {\n          name,\n          email,\n          password,\n        }\n      );\n\n      if (response.data?.success) {\n        setSuccess(true);\n        setError(null);\n        setEmail('');\n        setPassword('');\n        setName('');\n      } else {\n        setError(response.data.message);\n        setSuccess(false);\n      }\n    } catch (err) {\n      // console.log(err.response.data); // Log the error response\n      setError(err.response.data.message);\n      setSuccess(false);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Register</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\" // Corrected\n            id=\"name\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n            autoComplete=\"name\"\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n            autoComplete=\"email\" // Add autocomplete attribute\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            autoComplete=\"current-password\" // Add autocomplete attribute\n            required\n          />\n        </div>\n        <button type=\"submit\">Register</button>\n      </form>\n\n      {error && <p>{error}</p>}\n      {success && <p>Successfully registered!</p>}\n    </div>\n  );\n};\n\n// export default RegisterForm;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </HelmetProvider>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["RegisterForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","error","setError","_useState9","_useState10","success","setSuccess","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","e","_response$data","response","_context","prev","next","preventDefault","axios","sent","data","message","t0","stop","_x","apply","arguments","_jsxs","children","_jsx","onSubmit","htmlFor","type","id","value","onChange","target","autoComplete","required","HelmetProvider","Helmet"],"sourceRoot":""}