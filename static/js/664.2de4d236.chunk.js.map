{"version":3,"file":"static/js/664.2de4d236.chunk.js","mappings":"yPAIaA,EAAe,WAC1B,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA8Bb,EAAAA,EAAAA,WAAS,GAAMc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAC,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACP,OAAnBJ,EAAEK,iBAAiBH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGME,EAAAA,EAAAA,KAAW,oCAAqC,CACrEzB,MAAAA,EACAI,SAAAA,EACAsB,SAAAA,EAAAA,KACC,KAAD,GAJIN,EAAQC,EAAAM,MAMDC,KAAKhB,SAChBC,GAAW,GACXJ,EAAS,MACTR,EAAS,IACTI,EAAY,MAEZI,EAASW,EAASQ,KAAKC,SACvBhB,GAAW,IACZQ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAEDZ,EAASY,EAAAS,GAAIV,SAASQ,KAAKC,SAC3BhB,GAAW,GAAO,yBAAAQ,EAAAU,OAAA,GAAAb,EAAA,kBAErB,gBAvBiBc,GAAA,OAAAjB,EAAAkB,MAAA,KAAAC,UAAA,KAyBlB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJD,EAAAA,EAAAA,MAAA,QAAMG,SAAUxB,EAAasB,SAAA,EAC3BD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,YACPC,EAAAA,EAAAA,KAAA,SACEE,KAAK,QACLC,MAAOxC,EACPyC,SAAU,SAAAtB,GAAC,OAAIlB,EAASkB,EAAEuB,OAAOF,MAAM,EACvCG,UAAQ,QAGZR,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,eACPC,EAAAA,EAAAA,KAAA,SACEE,KAAK,WACLC,MAAOpC,EACPqC,SAAU,SAAAtB,GAAC,OAAId,EAAYc,EAAEuB,OAAOF,MAAM,EAC1CG,UAAQ,QAGZN,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAAQH,SAAC,gBAEvB5B,IAAS6B,EAAAA,EAAAA,KAAA,KAAAD,SAAI5B,IACbI,IAAWyB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+BAGrB,C,+DCjDA,UAXqB,WACnB,OACED,EAAAA,EAAAA,MAACS,EAAAA,GAAc,CAAAR,SAAA,EACbC,EAAAA,EAAAA,KAACQ,EAAAA,GAAM,CAAAT,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAETC,EAAAA,EAAAA,KAAC1C,EAAAA,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport { register } from '../../redux/auth/authOperations';\n\nexport const RegisterForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post('https://your-backend-url/register', {\n        email,\n        password,\n        register,\n      });\n\n      if (response.data.success) {\n        setSuccess(true);\n        setError(null);\n        setEmail('');\n        setPassword('');\n      } else {\n        setError(response.data.message);\n        setSuccess(false);\n      }\n    } catch (err) {\n      setError(err.response.data.message);\n      setSuccess(false);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Register</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">Register</button>\n      </form>\n      {error && <p>{error}</p>}\n      {success && <p>Successfully registered!</p>}\n    </div>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </HelmetProvider>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["RegisterForm","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","error","setError","_useState7","_useState8","success","setSuccess","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","e","response","_context","prev","next","preventDefault","axios","register","sent","data","message","t0","stop","_x","apply","arguments","_jsxs","children","_jsx","onSubmit","type","value","onChange","target","required","HelmetProvider","Helmet"],"sourceRoot":""}